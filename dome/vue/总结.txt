//1. vue 实例被创建的时候, vue 中 data 中的所有的 property 会被加入发哦一个响应式系统中, 当 property 的值发生改变的时候, 视图也会发生改变(视图发生改变就是一次视图被重新渲染的过程)

// 2. 除了data 中的 property，Vue 实例还暴露了一些有用的实例 property 与方法。它们都有前缀 $，以便与用户定义的 property 区分开来。

// 3. vue 初始化过程 
    1. 设置数据监听 -> 2. 编译模板 -> 3. 将实例挂载到 DOM 上 数据变化时更新DOM等

// 4. vue 的生命周期函数中的 this -> vue 实例

// 5. 生命周期函数中不能使用 箭头函数, 因为 箭头函数中的 this 会重上一级的词法环境中去查找, 如果上一级找不到就向上上级的词法环境中去找，直到找到为止。所以 在
      生命周期函数中的 this 是我们无法确定的所以不用箭头函数在 vue 实例的生命周期函数中

// 6. 计算属性具有缓存功能,如果数据没变化那就并不需要计算直接，这是就用缓存的值, 对于一个普通函数对值进行计算在return 是能实现 vue 计算属性的效果的,但是在没次数据变化或不变的情况下, 函数都的运行后才的得到value值

// 7. 计算属性用于当一个值改变了在实现另一个值的计算和改变。 而侦听器是监听数据的变化来发送一次请求,或者执行一次事件。例如 查询功能
